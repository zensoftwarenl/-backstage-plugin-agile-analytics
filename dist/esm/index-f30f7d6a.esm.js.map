{"version":3,"file":"index-f30f7d6a.esm.js","sources":["../../src/helpers.ts","../../src/api/index.ts","../../src/routes.ts","../../src/plugin.ts"],"sourcesContent":["import moment from 'moment';\r\nimport { Ticket } from './api/types';\r\n\r\n// encoding\r\nexport function encodeApiKey(key: string): string {\r\n  const encoded = Buffer.from(`${key}`).toString('base64');\r\n  return encoded;\r\n}\r\n\r\n// timeperiod\r\nexport function getStartDate(\r\n  amount: number,\r\n  period: 'days' | 'months',\r\n): number {\r\n  return moment()\r\n    .set({ hours: 0, minutes: 0, seconds: 0 })\r\n    .subtract(amount, period)\r\n    .unix();\r\n}\r\n\r\nexport function getEndDate(): number {\r\n  return moment().set({ hours: 23, minutes: 59, seconds: 59 }).unix();\r\n}\r\n\r\n// si page\r\nexport function getUniqueListByParent(arr: Ticket[]) {\r\n  const uniqueListOfLatest: Ticket[] = arr.reduce(\r\n    (acc: Ticket[], item: Ticket) => {\r\n      const isInList = acc.find(\r\n        ticket => ticket.parent.key === item.parent.key,\r\n      );\r\n      if (isInList) {\r\n        const isLater = item.timestamp >= isInList.timestamp;\r\n        if (isLater) {\r\n          return acc.map(task => {\r\n            if (task.parent.key === item.parent.key) {\r\n              return item;\r\n            }\r\n            return task;\r\n          });\r\n        }\r\n        return acc;\r\n      }\r\n      return [...acc, item];\r\n    },\r\n    [],\r\n  );\r\n\r\n  return uniqueListOfLatest;\r\n}\r\n","import { createApiRef } from '@backstage/core-plugin-api';\r\nimport { encodeApiKey } from '../helpers';\r\nimport {\r\n  ApiConstructorOptions,\r\n  DeploymentFreqResponse,\r\n  LeadTimeResponse,\r\n  LeaksResponse,\r\n  OrganisationDataOptions,\r\n  OrganisationDataResponse,\r\n  ReposDataOptions,\r\n  ReposDataResponse,\r\n  RiskChartData,\r\n  RiskChartResponse,\r\n  SiDataOptions,\r\n  SiDataResponse,\r\n} from './types';\r\n\r\nexport interface AgileAnalyticsAPI {\r\n  getOrganisationData(\r\n    options: OrganisationDataOptions,\r\n  ): Promise<OrganisationDataResponse>;\r\n  getSiData(options: SiDataOptions): Promise<SiDataResponse>;\r\n  getReposData(options: ReposDataOptions): Promise<ReposDataResponse>;\r\n  getDeploymentFreqData(\r\n    options: SiDataOptions,\r\n  ): Promise<DeploymentFreqResponse>;\r\n  getLeadTimeData(options: SiDataOptions): Promise<LeadTimeResponse>;\r\n  getStockData(options: SiDataOptions): Promise<any>;\r\n  getRiskChartData(options: SiDataOptions): Promise<RiskChartResponse>;\r\n  getLeaksData(options: SiDataOptions): Promise<LeaksResponse>;\r\n}\r\n\r\nexport const agileAnalyticsApiRef = createApiRef<AgileAnalyticsAPI>({\r\n  id: 'plugin.agile-analytics.service',\r\n});\r\n\r\nconst DEFAULT_PROXY_PATH = 'https://api.prod.agileanalytics.cloud';\r\n\r\nfunction generateRequestParams(apiKey: string) {\r\n  return {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Api-Key': `${encodeApiKey(apiKey)}`,\r\n      'Access-Control-Allow-Origin': '*',\r\n    },\r\n  };\r\n}\r\n\r\nasync function generateErrorMessage(res: Response) {\r\n  if (res.statusText?.length) {\r\n    return res.statusText;\r\n  }\r\n  const errorText = await res.text();\r\n  if (errorText?.length) {\r\n    return errorText;\r\n  }\r\n  if (res.status) {\r\n    return res.status;\r\n  }\r\n  return 'unknown error.';\r\n}\r\n\r\nexport class AgileAnalyticsAPIClient implements AgileAnalyticsAPI {\r\n  private readonly proxyPath: string;\r\n\r\n  constructor(options: ApiConstructorOptions) {\r\n    this.proxyPath = DEFAULT_PROXY_PATH;\r\n  }\r\n\r\n  async getOrganisationData(\r\n    options: OrganisationDataOptions,\r\n  ): Promise<OrganisationDataResponse> {\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/settings/organisations/`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const { org_hash, org_name, number_of_users, status, subscription_level } =\r\n      await response.json();\r\n    const orgState = {\r\n      orgHash: org_hash,\r\n      orgName: org_name,\r\n      usersNumber: number_of_users,\r\n      status,\r\n      subscription: subscription_level,\r\n    };\r\n\r\n    return orgState;\r\n  }\r\n\r\n  async getSiData(options: SiDataOptions): Promise<SiDataResponse> {\r\n    const limit = 50;\r\n    let totalData: SiDataResponse = {\r\n      featuresAmount: 0,\r\n      notFeaturesAmount: 0,\r\n      featuresTime: 0,\r\n      notFeaturesTime: 0,\r\n      tickets: [],\r\n    };\r\n    let offset = 0;\r\n    let response: any = null;\r\n\r\n    do {\r\n      response = await fetch(\r\n        `${this.proxyPath}/${options.orgHash}/si/?date_start=${options.dateStart}&date_end=${options.dateEnd}&issue_key=^.*$&label=^.*$&transition_from=^.*$&transition_to=^Done$&limit=${limit}&offset=${offset}`, // &limit=50&offset=0 <--- add for pagination???\r\n        generateRequestParams(options.apiKey),\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\r\n          `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n            response,\r\n          )}`,\r\n        );\r\n      }\r\n\r\n      if (response.status === 200) {\r\n        const { features, not_features, time_spent, tickets } =\r\n          await response.json();\r\n        const siState = {\r\n          featuresAmount: features,\r\n          notFeaturesAmount: not_features,\r\n          featuresTime: time_spent?.feature ?? 0,\r\n          notFeaturesTime: time_spent?.['not feature'] ?? 0,\r\n          tickets,\r\n        };\r\n\r\n        totalData = {\r\n          featuresAmount: totalData.featuresAmount + siState.featuresAmount,\r\n          notFeaturesAmount:\r\n            totalData.notFeaturesAmount + siState.notFeaturesAmount,\r\n          featuresTime: totalData.featuresTime + siState.featuresTime,\r\n          notFeaturesTime: totalData.notFeaturesTime + siState.notFeaturesTime,\r\n          tickets: [...totalData.tickets, ...siState.tickets],\r\n        };\r\n\r\n        offset += limit;\r\n      }\r\n    } while (response?.status !== 204);\r\n\r\n    return totalData;\r\n  }\r\n\r\n  async getReposData(options: ReposDataOptions): Promise<ReposDataResponse> {\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/swarm/selected/`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const reposState = await response.json();\r\n\r\n    return reposState;\r\n  }\r\n\r\n  async getDeploymentFreqData(\r\n    options: SiDataOptions,\r\n  ): Promise<DeploymentFreqResponse> {\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/dora/deployment_frequency/?date_start=${options.dateStart}&date_end=${options.dateEnd}`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const state = await response.json();\r\n\r\n    return state;\r\n  }\r\n\r\n  async getLeadTimeData(options: SiDataOptions): Promise<LeadTimeResponse> {\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/dora/lead_time/?date_start=${options.dateStart}&date_end=${options.dateEnd}`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const state = await response.json();\r\n\r\n    return state;\r\n  }\r\n\r\n  async getStockData(options: SiDataOptions): Promise<any> {\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/stock/branches/?date_start=${options.dateStart}&date_end=${options.dateEnd}`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const state = await response.json();\r\n\r\n    return state;\r\n  }\r\n\r\n  async getRiskChartData(options: SiDataOptions): Promise<RiskChartResponse> {\r\n    let riskDataResponce = { low: 0, medium: 0, high: 0 };\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/stock/risk/?date_start=${options.dateStart}&date_end=${options.dateEnd}`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const tableData = await response.json();\r\n\r\n    if (tableData?.length) {\r\n      const reposData = await Promise.allSettled(\r\n        tableData.map(async (repo: RiskChartData) => {\r\n          const res = await fetch(\r\n            `${this.proxyPath}/${options.orgHash}/stock/risk/?date_start=${\r\n              options.dateStart\r\n            }&date_end=${options.dateEnd}\r\n              &direction=start&sort=branch&repository=${\r\n                repo.repo_name\r\n              }&start=0&end=${repo.table_rows - 1}`,\r\n            generateRequestParams(options.apiKey),\r\n          );\r\n\r\n          if (!res.ok) {\r\n            throw new Error(\r\n              `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n                response,\r\n              )}`,\r\n            );\r\n          }\r\n\r\n          const data = await res.json();\r\n\r\n          return data;\r\n        }),\r\n      );\r\n\r\n      if (reposData.length) {\r\n        let status = 200;\r\n        if (\r\n          !reposData.find(\r\n            value => value.status === 'fulfilled' && value?.value?.length > 0,\r\n          )\r\n        ) {\r\n          status = 204;\r\n        }\r\n\r\n        riskDataResponce = reposData\r\n          .filter(repo => repo.status === 'fulfilled')\r\n          .reduce(\r\n            (\r\n              acc: {\r\n                low: number;\r\n                medium: number;\r\n                high: number;\r\n              },\r\n              repo,\r\n            ) => {\r\n              if ((repo as PromiseFulfilledResult<any>)?.value?.length) {\r\n                const repoRiskData = (\r\n                  repo as PromiseFulfilledResult<any>\r\n                )?.value?.reduce(\r\n                  (\r\n                    riskCounter: {\r\n                      low: number;\r\n                      medium: number;\r\n                      high: number;\r\n                    },\r\n                    row: { risk: string },\r\n                  ) => {\r\n                    switch (row.risk) {\r\n                      case 'highest':\r\n                      case 'high':\r\n                        return {\r\n                          ...riskCounter,\r\n                          high: riskCounter.high + 1,\r\n                        };\r\n                      case 'medium':\r\n                        return {\r\n                          ...riskCounter,\r\n                          medium: riskCounter.medium + 1,\r\n                        };\r\n                      case 'low':\r\n                      case 'lowest':\r\n                        return {\r\n                          ...riskCounter,\r\n                          low: riskCounter.low + 1,\r\n                        };\r\n                      default:\r\n                        return riskCounter;\r\n                    }\r\n                  },\r\n                  {\r\n                    low: 0,\r\n                    medium: 0,\r\n                    high: 0,\r\n                  },\r\n                );\r\n\r\n                return {\r\n                  low: acc.low + repoRiskData.low,\r\n                  medium: acc.medium + repoRiskData.medium,\r\n                  high: acc.high + repoRiskData.high,\r\n                };\r\n              }\r\n              return acc;\r\n            },\r\n            { low: 0, medium: 0, high: 0 },\r\n          );\r\n      }\r\n    }\r\n\r\n    return riskDataResponce;\r\n  }\r\n  async getLeaksData(options: SiDataOptions): Promise<LeaksResponse> {\r\n    const response = await fetch(\r\n      `${this.proxyPath}/${options.orgHash}/security/leaks/?date_start=${options.dateStart}&date_end=${options.dateEnd}`,\r\n      generateRequestParams(options.apiKey),\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `There was a problem fetching analytics data: ${await generateErrorMessage(\r\n          response,\r\n        )}`,\r\n      );\r\n    }\r\n\r\n    const state = await response.json();\r\n\r\n    return state;\r\n  }\r\n}\r\n","import { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'agile-analytics',\n});\n","import {\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n} from '@backstage/core-plugin-api';\nimport { AgileAnalyticsAPIClient, agileAnalyticsApiRef } from './api';\n\nimport { rootRouteRef } from './routes';\n\nexport const agileAnalyticsPluginPlugin = createPlugin({\n  id: 'agile-analytics',\n  apis: [\n    createApiFactory({\n      api: agileAnalyticsApiRef,\n      deps: { discoveryApi: discoveryApiRef },\n      factory: ({ discoveryApi }) =>\n        new AgileAnalyticsAPIClient({ discoveryApi }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n  },\n});\n\nexport const AgileAnalyticsPluginPage = agileAnalyticsPluginPlugin.provide(\n  createRoutableExtension({\n    name: 'Agile Analytics Plugin Page',\n    component: () =>\n      import('./components/AaMainPageComponent').then(\n        m => m.AaMainPageComponent,\n      ),\n    mountPoint: rootRouteRef,\n  }),\n);\n"],"names":[],"mappings":"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"}